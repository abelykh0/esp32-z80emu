#include "ScanCodeLayout.h"
#include "ps2Keyboard.h"

namespace fabgl {

const KeyboardLayout ScanCodeLayout {
  // name
  "SC",

  // inherited layout
  nullptr,

  // single byte scancodes
  {
    { 0x76, VK_ESCAPE },
    { 0x05, VK_F1 },
    { 0x06, VK_F2 },
    { 0x04, VK_F3 },
    { 0x0C, VK_F4 },
    { 0x03, VK_F5 },
    { 0x0B, VK_F6 },
    { 0x83, VK_F7 },
    { 0x0A, VK_F8 },
    { 0x01, VK_F9 },
    { 0x09, VK_F10 },
    { 0x78, VK_F11 },
    { 0x07, VK_F12 },
    { 0x16, VK_1 },
    { 0x1E, VK_2 },
    { 0x26, VK_3 },
    { 0x25, VK_4 },
    { 0x2E, VK_5 },
    { 0x36, VK_6 },
    { 0x3D, VK_7 },
    { 0x3E, VK_8 },
    { 0x46, VK_9 },
    { 0x45, VK_0 },
    { 0x15, VK_q },
    { 0x1D, VK_w },
    { 0x24, VK_e },
    { 0x2D, VK_r },
    { 0x2C, VK_t },
    { 0x35, VK_y },
    { 0x3C, VK_u },
    { 0x43, VK_i },
    { 0x44, VK_o },
    { 0x4D, VK_p },
    { 0x1C, VK_a },
    { 0x1b, VK_s },
    { 0x23, VK_d },
    { 0x2b, VK_f },
    { 0x34, VK_g },
    { 0x33, VK_h },
    { 0x3B, VK_j },
    { 0x42, VK_k },
    { 0x4B, VK_l },
    { 0x1A, VK_z },
    { 0x22, VK_x },
    { 0x21, VK_c },
    { 0x2A, VK_v },
    { 0x32, VK_b },
    { 0x31, VK_n },
    { 0x3A, VK_m },
    { 0x0E, VK_GRAVEACCENT },
    { 0x4E, VK_MINUS },
    { 0x55, VK_EQUALS },
    { 0x54, VK_LEFTBRACKET },
    { 0x5B, VK_RIGHTBRACKET },
    { 0x5D, VK_BACKSLASH },
    { 0x4C, VK_SEMICOLON },
    { 0x52, VK_QUOTE },
    { 0x41, VK_COMMA },
    { 0x49, VK_PERIOD },
    { 0x4A, VK_SLASH },
    { 0x70, VK_KP_INSERT },
    { 0x69, VK_KP_END },
    { 0x72, VK_KP_DOWN },
    { 0x7A, VK_KP_PAGEDOWN },
    { 0x6B, VK_KP_LEFT },
    { 0x73, VK_KP_CENTER }, // "5" in the keypad
    { 0x74, VK_KP_RIGHT },
    { 0x6C, VK_KP_HOME },
    { 0x75, VK_KP_UP },
    { 0x7D, VK_KP_PAGEUP },
    { 0x71, VK_KP_DELETE },
    { 0x7C, VK_KP_MULTIPLY },
    { 0x79, VK_KP_PLUS },
    { 0x7B, VK_KP_MINUS },
    { 0x66, VK_BACKSPACE },
    { 0x0D, VK_TAB },
    { 0x5A, VK_RETURN },
    { 0x77, VK_NUMLOCK },
    { 0x7E, VK_SCROLLLOCK },
    { 0x58, VK_CAPSLOCK },
    { 0x12, VK_LSHIFT },
    { 0x59, VK_RSHIFT },
    { 0x14, VK_LCTRL },
    { 0x11, VK_LALT },
    { 0x29, VK_SPACE },
    { 0x84, VK_SYSREQ },  // ALT + PRINTSCREEN directly translated by the keyboard
  },

  // extended scancodes (0xE0..)
  {
    { 0x14, VK_RCTRL },
    { 0x11, VK_RALT },
    { 0x1F, VK_LGUI },
    { 0x2F, VK_APPLICATION },
    { 0x70, VK_INSERT },
    { 0x71, VK_DELETE },
    { 0x4A, VK_KP_DIVIDE },
    { 0x5A, VK_KP_ENTER },
    { 0x7D, VK_PAGEUP },
    { 0x7A, VK_PAGEDOWN },
    { 0x6C, VK_HOME },
    { 0x69, VK_END },
    { 0x75, VK_UP },
    { 0x72, VK_DOWN },
    { 0x6B, VK_LEFT },
    { 0x74, VK_RIGHT },
    // print screen is composed by "E0 12 E0 7C", here translated as separated VK_PRINTSCREEN1 and VK_PRINTSCREEN2
    // VK_PRINTSCREEN2 is also generated by "CTRL or SHIFT" + "PRINTSCREEN". So pressing PRINTSCREEN both VK_PRINTSCREEN1 and VK_PRINTSCREEN2
    // are generated, while pressing CTRL+PRINTSCREEN or SHIFT+PRINTSCREEN only VK_PRINTSCREEN2 is generated.
    { 0x12, VK_PRINTSCREEN1 },
    { 0x7C, VK_PRINTSCREEN2 },
    // pressing CTRL + PAUSE will generate "E0 7E" instead of normal Pause sequence. Here is translated to VK_BREAK.
    { 0x7E, VK_BREAK },
  },

  // virtual keys generated by other virtual keys combinations
  //  in_key, { CTRL, ALT, SHIFT, CAPSLOCK, NUMLOCK }, out_key
  {
    { VK_1,            { 0, 0, 1, 0, 0 }, VK_EXCLAIM },      // SHIFT "1" = "!"
    { VK_2,            { 0, 0, 1, 0, 0 }, VK_AT },           // SHIFT "2" = "@"
    { VK_3,            { 0, 0, 1, 0, 0 }, VK_HASH },         // SHIFT "3" = "#"
    { VK_4,            { 0, 0, 1, 0, 0 }, VK_DOLLAR },       // SHIFT "4" = "$"
    { VK_5,            { 0, 0, 1, 0, 0 }, VK_PERCENT },      // SHIFT "5" = "%"
    { VK_6,            { 0, 0, 1, 0, 0 }, VK_CARET },        // SHIFT "6" = "^"
    { VK_7,            { 0, 0, 1, 0, 0 }, VK_AMPERSAND },    // SHIFT "7" = "&"
    { VK_8,            { 0, 0, 1, 0, 0 }, VK_ASTERISK },     // SHIFT "8" = "*"
    { VK_9,            { 0, 0, 1, 0, 0 }, VK_LEFTPAREN },    // SHIFT "9" = "("
    { VK_0,            { 0, 0, 1, 0, 0 }, VK_RIGHTPAREN },   // SHIFT "0" = ")"

    { VK_GRAVEACCENT,  { 0, 0, 1, 0, 0 }, VK_TILDE },        // SHIFT "`" = "~"
    { VK_MINUS,        { 0, 0, 1, 0, 0 }, VK_UNDERSCORE },   // SHIFT "-" = "_"
    { VK_EQUALS,       { 0, 0, 1, 0, 0 }, VK_PLUS },         // SHIFT "=" = "+"
    { VK_LEFTBRACKET,  { 0, 0, 1, 0, 0 }, VK_LEFTBRACE },    // SHIFT "[" = "{"
    { VK_RIGHTBRACKET, { 0, 0, 1, 0, 0 }, VK_RIGHTBRACE },   // SHIFT "]" = "}"
    { VK_BACKSLASH,    { 0, 0, 1, 0, 0 }, VK_VERTICALBAR },  // SHIFT "\" = "|"
    { VK_SEMICOLON,    { 0, 0, 1, 0, 0 }, VK_COLON },        // SHIFT ";" = ":"
    { VK_QUOTE,        { 0, 0, 1, 0, 0 }, VK_QUOTEDBL },     // SHIFT "'" = """
    { VK_COMMA,        { 0, 0, 1, 0, 0 }, VK_LESS },         // SHIFT "," = "<"
    { VK_PERIOD,       { 0, 0, 1, 0, 0 }, VK_GREATER },      // SHIFT "." = ">"
    { VK_SLASH,        { 0, 0, 1, 0, 0 }, VK_QUESTION },     // SHIFT "/" = "?"

    // keypad with NUMLOCK enabled
    { VK_KP_INSERT,    { 0, 0, 0, 0, 1 }, VK_KP_0 },         // NUMLOCK + KP INS      = "0"
    { VK_KP_END,       { 0, 0, 0, 0, 1 }, VK_KP_1 },         // NUMLOCK + KP END      = "1"
    { VK_KP_DOWN,      { 0, 0, 0, 0, 1 }, VK_KP_2 },         // NUMLOCK + KP DOWN     = "2"
    { VK_KP_PAGEDOWN,  { 0, 0, 0, 0, 1 }, VK_KP_3 },         // NUMLOCK + KP PAGEDOWN = "3"
    { VK_KP_LEFT,      { 0, 0, 0, 0, 1 }, VK_KP_4 },         // NUMLOCK + KP LEFT     = "4"
    { VK_KP_CENTER,    { 0, 0, 0, 0, 1 }, VK_KP_5 },         // NUMLOCK + KP CENTER   = "5"
    { VK_KP_RIGHT,     { 0, 0, 0, 0, 1 }, VK_KP_6 },         // NUMLOCK + KP RIGHT    = "6"
    { VK_KP_HOME,      { 0, 0, 0, 0, 1 }, VK_KP_7 },         // NUMLOCK + KP HOME     = "7"
    { VK_KP_UP,        { 0, 0, 0, 0, 1 }, VK_KP_8 },         // NUMLOCK + KP UP       = "8"
    { VK_KP_PAGEUP,    { 0, 0, 0, 0, 1 }, VK_KP_9 },         // NUMLOCK + KP PAGEUP   = "9"
    { VK_KP_DELETE,    { 0, 0, 0, 0, 1 }, VK_KP_PERIOD },    // NUMLOCK + KP DELETE   = "."

    // SHIFT or CAPSLOCK "a".."z" = "A".."Z"
    { VK_a,            { 0, 0, 1, 1, 0 }, VK_A },
    { VK_b,            { 0, 0, 1, 1, 0 }, VK_B },
    { VK_c,            { 0, 0, 1, 1, 0 }, VK_C },
    { VK_d,            { 0, 0, 1, 1, 0 }, VK_D },
    { VK_e,            { 0, 0, 1, 1, 0 }, VK_E },
    { VK_f,            { 0, 0, 1, 1, 0 }, VK_F },
    { VK_g,            { 0, 0, 1, 1, 0 }, VK_G },
    { VK_h,            { 0, 0, 1, 1, 0 }, VK_H },
    { VK_i,            { 0, 0, 1, 1, 0 }, VK_I },
    { VK_j,            { 0, 0, 1, 1, 0 }, VK_J },
    { VK_k,            { 0, 0, 1, 1, 0 }, VK_K },
    { VK_l,            { 0, 0, 1, 1, 0 }, VK_L },
    { VK_m,            { 0, 0, 1, 1, 0 }, VK_M },
    { VK_n,            { 0, 0, 1, 1, 0 }, VK_N },
    { VK_o,            { 0, 0, 1, 1, 0 }, VK_O },
    { VK_p,            { 0, 0, 1, 1, 0 }, VK_P },
    { VK_q,            { 0, 0, 1, 1, 0 }, VK_Q },
    { VK_r,            { 0, 0, 1, 1, 0 }, VK_R },
    { VK_s,            { 0, 0, 1, 1, 0 }, VK_S },
    { VK_t,            { 0, 0, 1, 1, 0 }, VK_T },
    { VK_u,            { 0, 0, 1, 1, 0 }, VK_U },
    { VK_v,            { 0, 0, 1, 1, 0 }, VK_V },
    { VK_w,            { 0, 0, 1, 1, 0 }, VK_W },
    { VK_x,            { 0, 0, 1, 1, 0 }, VK_X },
    { VK_y,            { 0, 0, 1, 1, 0 }, VK_Y },
    { VK_z,            { 0, 0, 1, 1, 0 }, VK_Z },
  }
};

}
